// Fylgja (getfylgja.com)
// Licensed under MIT Open Source

/// @require {Mixin} build-util-item
/// @param {Map} $utilities - map to loop trough for util styles
/// @return {*} - new util classes
@mixin build-util($utilities) {
    @each $name, $util in $utilities {
        $type: type-of($util);
        $property: $name;
        $options: "auto";
        $properties: null;

        @if ($property == "content") {
            @error "The CSS property content can not be used as an util";
        }

        @if ($type == list) {
            @each $value in $util {
                @if (type-of($value) != string) {
                    @error "Simple util values must be a string";
                }

                $name: $value;
                @include build-util-item($name, $property, $value);
            }
        } @else if (type-of($util) == map) {
            $map-values: if(
                map-has-key($util, "values"),
                map-get($util, "values"),
                $util
            );

            $options: if(
                map-has-key($util, "options"),
                map-get($util, "options"),
                "auto"
            );

            $properties: if(
                map-has-key($util, "properties"),
                map-get($util, "properties"),
                null
            );

            @if (type-of($map-values) == map) {
                @each $custom-name, $value in $map-values {
                    @include build-util-item(
                        $custom-name,
                        $property,
                        $value,
                        $options,
                        $properties
                    );
                }
            } @else {
                @each $value in $map-values {
                    $custom-name: $value;
                    @include build-util-item(
                        $custom-name,
                        $property,
                        $value,
                        $options,
                        $properties
                    );
                }
            }
        } @else {
            @include build-util-item($name, $property, $util);
        }
    }
}

$config-utils: () !default;

@include build-util($config-utils);
